/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.renren.ugc.comment.xoa2;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 语音的数据
 */
public class CommentVoiceInfo implements org.apache.thrift.TBase<CommentVoiceInfo, CommentVoiceInfo._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CommentVoiceInfo");

  private static final org.apache.thrift.protocol.TField VOICE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("voiceUrl", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField VOICE_LENGTH_FIELD_DESC = new org.apache.thrift.protocol.TField("voiceLength", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField VOICE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("voiceSize", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField VOICE_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("voiceRate", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField VOICE_PLAY_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("voicePlayCount", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CommentVoiceInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CommentVoiceInfoTupleSchemeFactory());
  }

  /**
   * 语音评论的URL
   */
  public String voiceUrl; // required
  /**
   * 语音评论的时间长度 (in sec)
   */
  public int voiceLength; // optional
  /**
   * 语音评论的文件大小 (in byte)
   */
  public int voiceSize; // optional
  /**
   * 语音评论的频率
   */
  public int voiceRate; // optional
  /**
   * 语音评论播放的次数
   */
  public int voicePlayCount; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 语音评论的URL
     */
    VOICE_URL((short)1, "voiceUrl"),
    /**
     * 语音评论的时间长度 (in sec)
     */
    VOICE_LENGTH((short)2, "voiceLength"),
    /**
     * 语音评论的文件大小 (in byte)
     */
    VOICE_SIZE((short)3, "voiceSize"),
    /**
     * 语音评论的频率
     */
    VOICE_RATE((short)4, "voiceRate"),
    /**
     * 语音评论播放的次数
     */
    VOICE_PLAY_COUNT((short)5, "voicePlayCount");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // VOICE_URL
          return VOICE_URL;
        case 2: // VOICE_LENGTH
          return VOICE_LENGTH;
        case 3: // VOICE_SIZE
          return VOICE_SIZE;
        case 4: // VOICE_RATE
          return VOICE_RATE;
        case 5: // VOICE_PLAY_COUNT
          return VOICE_PLAY_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __VOICELENGTH_ISSET_ID = 0;
  private static final int __VOICESIZE_ISSET_ID = 1;
  private static final int __VOICERATE_ISSET_ID = 2;
  private static final int __VOICEPLAYCOUNT_ISSET_ID = 3;
  private BitSet __isset_bit_vector = new BitSet(4);
  private _Fields optionals[] = {_Fields.VOICE_LENGTH,_Fields.VOICE_SIZE,_Fields.VOICE_RATE,_Fields.VOICE_PLAY_COUNT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.VOICE_URL, new org.apache.thrift.meta_data.FieldMetaData("voiceUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VOICE_LENGTH, new org.apache.thrift.meta_data.FieldMetaData("voiceLength", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VOICE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("voiceSize", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VOICE_RATE, new org.apache.thrift.meta_data.FieldMetaData("voiceRate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VOICE_PLAY_COUNT, new org.apache.thrift.meta_data.FieldMetaData("voicePlayCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CommentVoiceInfo.class, metaDataMap);
  }

  public CommentVoiceInfo() {
  }

  public CommentVoiceInfo(
    String voiceUrl)
  {
    this();
    this.voiceUrl = voiceUrl;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CommentVoiceInfo(CommentVoiceInfo other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetVoiceUrl()) {
      this.voiceUrl = other.voiceUrl;
    }
    this.voiceLength = other.voiceLength;
    this.voiceSize = other.voiceSize;
    this.voiceRate = other.voiceRate;
    this.voicePlayCount = other.voicePlayCount;
  }

  public CommentVoiceInfo deepCopy() {
    return new CommentVoiceInfo(this);
  }

  @Override
  public void clear() {
    this.voiceUrl = null;
    setVoiceLengthIsSet(false);
    this.voiceLength = 0;
    setVoiceSizeIsSet(false);
    this.voiceSize = 0;
    setVoiceRateIsSet(false);
    this.voiceRate = 0;
    setVoicePlayCountIsSet(false);
    this.voicePlayCount = 0;
  }

  /**
   * 语音评论的URL
   */
  public String getVoiceUrl() {
    return this.voiceUrl;
  }

  /**
   * 语音评论的URL
   */
  public CommentVoiceInfo setVoiceUrl(String voiceUrl) {
    this.voiceUrl = voiceUrl;
    return this;
  }

  public void unsetVoiceUrl() {
    this.voiceUrl = null;
  }

  /** Returns true if field voiceUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetVoiceUrl() {
    return this.voiceUrl != null;
  }

  public void setVoiceUrlIsSet(boolean value) {
    if (!value) {
      this.voiceUrl = null;
    }
  }

  /**
   * 语音评论的时间长度 (in sec)
   */
  public int getVoiceLength() {
    return this.voiceLength;
  }

  /**
   * 语音评论的时间长度 (in sec)
   */
  public CommentVoiceInfo setVoiceLength(int voiceLength) {
    this.voiceLength = voiceLength;
    setVoiceLengthIsSet(true);
    return this;
  }

  public void unsetVoiceLength() {
    __isset_bit_vector.clear(__VOICELENGTH_ISSET_ID);
  }

  /** Returns true if field voiceLength is set (has been assigned a value) and false otherwise */
  public boolean isSetVoiceLength() {
    return __isset_bit_vector.get(__VOICELENGTH_ISSET_ID);
  }

  public void setVoiceLengthIsSet(boolean value) {
    __isset_bit_vector.set(__VOICELENGTH_ISSET_ID, value);
  }

  /**
   * 语音评论的文件大小 (in byte)
   */
  public int getVoiceSize() {
    return this.voiceSize;
  }

  /**
   * 语音评论的文件大小 (in byte)
   */
  public CommentVoiceInfo setVoiceSize(int voiceSize) {
    this.voiceSize = voiceSize;
    setVoiceSizeIsSet(true);
    return this;
  }

  public void unsetVoiceSize() {
    __isset_bit_vector.clear(__VOICESIZE_ISSET_ID);
  }

  /** Returns true if field voiceSize is set (has been assigned a value) and false otherwise */
  public boolean isSetVoiceSize() {
    return __isset_bit_vector.get(__VOICESIZE_ISSET_ID);
  }

  public void setVoiceSizeIsSet(boolean value) {
    __isset_bit_vector.set(__VOICESIZE_ISSET_ID, value);
  }

  /**
   * 语音评论的频率
   */
  public int getVoiceRate() {
    return this.voiceRate;
  }

  /**
   * 语音评论的频率
   */
  public CommentVoiceInfo setVoiceRate(int voiceRate) {
    this.voiceRate = voiceRate;
    setVoiceRateIsSet(true);
    return this;
  }

  public void unsetVoiceRate() {
    __isset_bit_vector.clear(__VOICERATE_ISSET_ID);
  }

  /** Returns true if field voiceRate is set (has been assigned a value) and false otherwise */
  public boolean isSetVoiceRate() {
    return __isset_bit_vector.get(__VOICERATE_ISSET_ID);
  }

  public void setVoiceRateIsSet(boolean value) {
    __isset_bit_vector.set(__VOICERATE_ISSET_ID, value);
  }

  /**
   * 语音评论播放的次数
   */
  public int getVoicePlayCount() {
    return this.voicePlayCount;
  }

  /**
   * 语音评论播放的次数
   */
  public CommentVoiceInfo setVoicePlayCount(int voicePlayCount) {
    this.voicePlayCount = voicePlayCount;
    setVoicePlayCountIsSet(true);
    return this;
  }

  public void unsetVoicePlayCount() {
    __isset_bit_vector.clear(__VOICEPLAYCOUNT_ISSET_ID);
  }

  /** Returns true if field voicePlayCount is set (has been assigned a value) and false otherwise */
  public boolean isSetVoicePlayCount() {
    return __isset_bit_vector.get(__VOICEPLAYCOUNT_ISSET_ID);
  }

  public void setVoicePlayCountIsSet(boolean value) {
    __isset_bit_vector.set(__VOICEPLAYCOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case VOICE_URL:
      if (value == null) {
        unsetVoiceUrl();
      } else {
        setVoiceUrl((String)value);
      }
      break;

    case VOICE_LENGTH:
      if (value == null) {
        unsetVoiceLength();
      } else {
        setVoiceLength((Integer)value);
      }
      break;

    case VOICE_SIZE:
      if (value == null) {
        unsetVoiceSize();
      } else {
        setVoiceSize((Integer)value);
      }
      break;

    case VOICE_RATE:
      if (value == null) {
        unsetVoiceRate();
      } else {
        setVoiceRate((Integer)value);
      }
      break;

    case VOICE_PLAY_COUNT:
      if (value == null) {
        unsetVoicePlayCount();
      } else {
        setVoicePlayCount((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case VOICE_URL:
      return getVoiceUrl();

    case VOICE_LENGTH:
      return Integer.valueOf(getVoiceLength());

    case VOICE_SIZE:
      return Integer.valueOf(getVoiceSize());

    case VOICE_RATE:
      return Integer.valueOf(getVoiceRate());

    case VOICE_PLAY_COUNT:
      return Integer.valueOf(getVoicePlayCount());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case VOICE_URL:
      return isSetVoiceUrl();
    case VOICE_LENGTH:
      return isSetVoiceLength();
    case VOICE_SIZE:
      return isSetVoiceSize();
    case VOICE_RATE:
      return isSetVoiceRate();
    case VOICE_PLAY_COUNT:
      return isSetVoicePlayCount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CommentVoiceInfo)
      return this.equals((CommentVoiceInfo)that);
    return false;
  }

  public boolean equals(CommentVoiceInfo that) {
    if (that == null)
      return false;

    boolean this_present_voiceUrl = true && this.isSetVoiceUrl();
    boolean that_present_voiceUrl = true && that.isSetVoiceUrl();
    if (this_present_voiceUrl || that_present_voiceUrl) {
      if (!(this_present_voiceUrl && that_present_voiceUrl))
        return false;
      if (!this.voiceUrl.equals(that.voiceUrl))
        return false;
    }

    boolean this_present_voiceLength = true && this.isSetVoiceLength();
    boolean that_present_voiceLength = true && that.isSetVoiceLength();
    if (this_present_voiceLength || that_present_voiceLength) {
      if (!(this_present_voiceLength && that_present_voiceLength))
        return false;
      if (this.voiceLength != that.voiceLength)
        return false;
    }

    boolean this_present_voiceSize = true && this.isSetVoiceSize();
    boolean that_present_voiceSize = true && that.isSetVoiceSize();
    if (this_present_voiceSize || that_present_voiceSize) {
      if (!(this_present_voiceSize && that_present_voiceSize))
        return false;
      if (this.voiceSize != that.voiceSize)
        return false;
    }

    boolean this_present_voiceRate = true && this.isSetVoiceRate();
    boolean that_present_voiceRate = true && that.isSetVoiceRate();
    if (this_present_voiceRate || that_present_voiceRate) {
      if (!(this_present_voiceRate && that_present_voiceRate))
        return false;
      if (this.voiceRate != that.voiceRate)
        return false;
    }

    boolean this_present_voicePlayCount = true && this.isSetVoicePlayCount();
    boolean that_present_voicePlayCount = true && that.isSetVoicePlayCount();
    if (this_present_voicePlayCount || that_present_voicePlayCount) {
      if (!(this_present_voicePlayCount && that_present_voicePlayCount))
        return false;
      if (this.voicePlayCount != that.voicePlayCount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_voiceUrl = true && (isSetVoiceUrl());
    builder.append(present_voiceUrl);
    if (present_voiceUrl)
      builder.append(voiceUrl);

    boolean present_voiceLength = true && (isSetVoiceLength());
    builder.append(present_voiceLength);
    if (present_voiceLength)
      builder.append(voiceLength);

    boolean present_voiceSize = true && (isSetVoiceSize());
    builder.append(present_voiceSize);
    if (present_voiceSize)
      builder.append(voiceSize);

    boolean present_voiceRate = true && (isSetVoiceRate());
    builder.append(present_voiceRate);
    if (present_voiceRate)
      builder.append(voiceRate);

    boolean present_voicePlayCount = true && (isSetVoicePlayCount());
    builder.append(present_voicePlayCount);
    if (present_voicePlayCount)
      builder.append(voicePlayCount);

    return builder.toHashCode();
  }

  public int compareTo(CommentVoiceInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    CommentVoiceInfo typedOther = (CommentVoiceInfo)other;

    lastComparison = Boolean.valueOf(isSetVoiceUrl()).compareTo(typedOther.isSetVoiceUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoiceUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voiceUrl, typedOther.voiceUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVoiceLength()).compareTo(typedOther.isSetVoiceLength());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoiceLength()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voiceLength, typedOther.voiceLength);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVoiceSize()).compareTo(typedOther.isSetVoiceSize());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoiceSize()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voiceSize, typedOther.voiceSize);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVoiceRate()).compareTo(typedOther.isSetVoiceRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoiceRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voiceRate, typedOther.voiceRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVoicePlayCount()).compareTo(typedOther.isSetVoicePlayCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoicePlayCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voicePlayCount, typedOther.voicePlayCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CommentVoiceInfo(");
    boolean first = true;

    sb.append("voiceUrl:");
    if (this.voiceUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.voiceUrl);
    }
    first = false;
    if (isSetVoiceLength()) {
      if (!first) sb.append(", ");
      sb.append("voiceLength:");
      sb.append(this.voiceLength);
      first = false;
    }
    if (isSetVoiceSize()) {
      if (!first) sb.append(", ");
      sb.append("voiceSize:");
      sb.append(this.voiceSize);
      first = false;
    }
    if (isSetVoiceRate()) {
      if (!first) sb.append(", ");
      sb.append("voiceRate:");
      sb.append(this.voiceRate);
      first = false;
    }
    if (isSetVoicePlayCount()) {
      if (!first) sb.append(", ");
      sb.append("voicePlayCount:");
      sb.append(this.voicePlayCount);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CommentVoiceInfoStandardSchemeFactory implements SchemeFactory {
    public CommentVoiceInfoStandardScheme getScheme() {
      return new CommentVoiceInfoStandardScheme();
    }
  }

  private static class CommentVoiceInfoStandardScheme extends StandardScheme<CommentVoiceInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CommentVoiceInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // VOICE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.voiceUrl = iprot.readString();
              struct.setVoiceUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // VOICE_LENGTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.voiceLength = iprot.readI32();
              struct.setVoiceLengthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VOICE_SIZE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.voiceSize = iprot.readI32();
              struct.setVoiceSizeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VOICE_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.voiceRate = iprot.readI32();
              struct.setVoiceRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VOICE_PLAY_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.voicePlayCount = iprot.readI32();
              struct.setVoicePlayCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CommentVoiceInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.voiceUrl != null) {
        oprot.writeFieldBegin(VOICE_URL_FIELD_DESC);
        oprot.writeString(struct.voiceUrl);
        oprot.writeFieldEnd();
      }
      if (struct.isSetVoiceLength()) {
        oprot.writeFieldBegin(VOICE_LENGTH_FIELD_DESC);
        oprot.writeI32(struct.voiceLength);
        oprot.writeFieldEnd();
      }
      if (struct.isSetVoiceSize()) {
        oprot.writeFieldBegin(VOICE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.voiceSize);
        oprot.writeFieldEnd();
      }
      if (struct.isSetVoiceRate()) {
        oprot.writeFieldBegin(VOICE_RATE_FIELD_DESC);
        oprot.writeI32(struct.voiceRate);
        oprot.writeFieldEnd();
      }
      if (struct.isSetVoicePlayCount()) {
        oprot.writeFieldBegin(VOICE_PLAY_COUNT_FIELD_DESC);
        oprot.writeI32(struct.voicePlayCount);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CommentVoiceInfoTupleSchemeFactory implements SchemeFactory {
    public CommentVoiceInfoTupleScheme getScheme() {
      return new CommentVoiceInfoTupleScheme();
    }
  }

  private static class CommentVoiceInfoTupleScheme extends TupleScheme<CommentVoiceInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CommentVoiceInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetVoiceUrl()) {
        optionals.set(0);
      }
      if (struct.isSetVoiceLength()) {
        optionals.set(1);
      }
      if (struct.isSetVoiceSize()) {
        optionals.set(2);
      }
      if (struct.isSetVoiceRate()) {
        optionals.set(3);
      }
      if (struct.isSetVoicePlayCount()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetVoiceUrl()) {
        oprot.writeString(struct.voiceUrl);
      }
      if (struct.isSetVoiceLength()) {
        oprot.writeI32(struct.voiceLength);
      }
      if (struct.isSetVoiceSize()) {
        oprot.writeI32(struct.voiceSize);
      }
      if (struct.isSetVoiceRate()) {
        oprot.writeI32(struct.voiceRate);
      }
      if (struct.isSetVoicePlayCount()) {
        oprot.writeI32(struct.voicePlayCount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CommentVoiceInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.voiceUrl = iprot.readString();
        struct.setVoiceUrlIsSet(true);
      }
      if (incoming.get(1)) {
        struct.voiceLength = iprot.readI32();
        struct.setVoiceLengthIsSet(true);
      }
      if (incoming.get(2)) {
        struct.voiceSize = iprot.readI32();
        struct.setVoiceSizeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.voiceRate = iprot.readI32();
        struct.setVoiceRateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.voicePlayCount = iprot.readI32();
        struct.setVoicePlayCountIsSet(true);
      }
    }
  }

}

